Pythonで作成したシンプルなTodoリストアプリケーション
====================================

概要
----
このアプリケーションは、Pythonのtkinterを使用して作成されたデスクトップ用のTodoリストアプリケーションです。
タスクの追加、編集、完了管理ができ、データは自動的にJSONファイルに保存されます。

主な機能
--------
1. タスク管理
   - 新規タスクの追加
   - 既存タスクの編集
   - タスクの削除
   - タスクの完了/未完了の切り替え

2. 優先度設定
   - 各タスクに優先度（高・中・低）を設定可能
   - タスク作成時や編集時に変更可能

3. データ永続化
   - すべてのタスクはtasks.jsonに自動保存
   - アプリケーション起動時に自動的に前回のデータを読み込み

使い方
------
1. タスクの追加
   - 上部の入力欄にタスク内容を入力
   - 優先度を選択（デフォルトは「中」）
   - 「追加」ボタンをクリックまたはEnterキーを押す

2. タスクの編集
   - 編集したいタスクを選択
   - 「編集」ボタンをクリック
   - 表示されるウィンドウでタスク内容と優先度を変更
   - 「保存」ボタンをクリック

3. タスクの完了/未完了
   - タスクを選択
   - 「完了/未完了」ボタンをクリックして状態を切り替え

4. タスクの削除
   - 削除したいタスクを選択
   - 「削除」ボタンをクリック
   - 確認ダイアログで「はい」を選択

必要なパッケージ
--------------
- Python 3.x
- tkinter（Pythonの標準ライブラリ）

ファイル構成
----------
- models/
  - task.py: タスクのデータモデル
- data/
  - storage.py: データの永続化処理
- gui/
  - app.py: メインのGUIアプリケーション
  - dialogs.py: 編集ダイアログなどのサブウィンドウ
- main.py: アプリケーションのエントリーポイント
- main_original.py: 元のコードのバックアップ
- tasks.json: タスクデータの保存ファイル（自動生成）
- README.txt: このファイル

プロジェクト構造の説明
------------------
- models/: データモデルを格納するディレクトリ
- data/: データの永続化に関する処理を格納するディレクトリ
- gui/: GUI関連のコードを格納するディレクトリ

アプリケーションの起動方法
----------------------
1. コマンドプロンプトで以下のコマンドを実行:
   python main.py
